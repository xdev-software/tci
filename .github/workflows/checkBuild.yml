name: Check Build

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
    paths-ignore: 
      - '**.md'
      - '.config/**'
      - '.github/**'
      - '.idea/**'
      - 'assets/**'
  pull_request:
    branches: [ develop ]
    paths-ignore: 
      - '**.md'
      - '.config/**'
      - '.github/**'
      - '.idea/**'
      - 'assets/**'

env:
  PRIMARY_MAVEN_MODULE: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [17, 21]
        distribution: [temurin]

    steps:
    - uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}
        cache: 'maven'
      
    - name: Build with Maven
      run: ./mvnw -B clean package -P ignore-service-loading
      
    - name: Check for uncommited changes
      run: |
        if [[ "$(git status --porcelain)" != "" ]]; then
          echo ----------------------------------------
          echo git status
          echo ----------------------------------------
          git status
          echo ----------------------------------------
          echo git diff
          echo ----------------------------------------
          git diff
          echo ----------------------------------------
          echo Troubleshooting
          echo ----------------------------------------
          echo "::error::Unstaged changes detected. Locally try running: git clean -ffdx && ./mvnw -B clean package"
          exit 1
        fi

  code-style:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || !startsWith(github.head_ref, 'renovate/') }}

    strategy:
      matrix:
        java: [17]
        distribution: [temurin]

    steps:
    - uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}
        cache: 'maven'

    - name: Run Checkstyle
      run: ./mvnw -B checkstyle:check -P checkstyle -T2C

  run-integration-tests:
    strategy:
      fail-fast: false
      matrix:
        java: [17, 21]
        distribution: [temurin]
        project:
        - tci-advanced-demo/persistence-it
        - tci-advanced-demo/webapp-it
        parallel: [0, 2]
        pre-start: [false, true]
    concurrency:
      group: ${{ github.workflow }}-run-integration-tests-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}
        cache: 'maven'

    - name: Test
      run: |
        ./mvnw -B test \
        -pl "${{ matrix.project }}" -am \
        -P run-it \
        ${{ matrix.pre-start && '-Dinfra-pre-start.enabled=1 ' || '' }} \
        ${{ matrix.parallel > 0 && format('-Djunit.jupiter.execution.parallel.enabled=true -Djunit.jupiter.execution.parallel.mode.default=concurrent -Djunit.jupiter.execution.parallel.mode.classes.default=concurrent -Djunit.jupiter.execution.parallel.config.strategy=fixed -Djunit.jupiter.execution.parallel.config.fixed.parallelism=2 -Djunit.jupiter.execution.parallel.config.fixed.max-pool-size={0} ', matrix.parallel) || '' }}

    # Replace '/' with '-'
    - name: Normalize project name
      if: failure()
      env:
        PROJECT: ${{ matrix.project }}
      run: echo PROJECT_NORMALIZED=${PROJECT/\//-} >> $GITHUB_ENV

    - name: Upload videos of test failures
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-fail-videos-${{ matrix.java }}-${{ matrix.distribution }}-${{ env.PROJECT_NORMALIZED }}-${{ matrix.parallel }}-${{ matrix.pre-start }}
        path: ${{ matrix.project }}/target/records
        if-no-files-found: ignore

